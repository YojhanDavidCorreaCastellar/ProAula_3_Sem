/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;
import model.dbConect;

/**
 *
 * @author YOJHAN DAVID
 */
public class pestañaAdmin extends javax.swing.JFrame {

    /**
     * Creates new form pestañaAdmin
     */
    public pestañaAdmin() {
       initComponents();
        DefaultTableModel model = new DefaultTableModel(
        new Object[][]{}, 
        new String[]{
            "Código", "Origen", "Destino", "Duración", 
            "Fecha/Hora", "Precio", "Avión", "Disponibilidad", "Estado"
        }
    ) {
    @Override
    public boolean isCellEditable(int row, int column) {
        return false; // Hacer que ninguna celda sea editable
        }
    };
        tablaVuelos.setModel(model);
        
        TableColumnModel columnModel = tablaVuelos.getColumnModel();
        columnModel.getColumn(0).setPreferredWidth(80);  // Código
        columnModel.getColumn(1).setPreferredWidth(100); // Origen
        columnModel.getColumn(2).setPreferredWidth(100); // Destino
        columnModel.getColumn(3).setPreferredWidth(80);  // Duración
        columnModel.getColumn(4).setPreferredWidth(150); // Fecha/Hora
        columnModel.getColumn(5).setPreferredWidth(100); // Precio
        columnModel.getColumn(6).setPreferredWidth(120); // Avión
        columnModel.getColumn(7).setPreferredWidth(120); // Disponibilidad
        columnModel.getColumn(8).setPreferredWidth(100); // Estado
        
        cargarDatos();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        codigoVuelo = new javax.swing.JTextField();
        origenVuelo = new javax.swing.JTextField();
        duracionVuelo = new javax.swing.JTextField();
        destinoVuelo = new javax.swing.JTextField();
        fechaVuelo = new javax.swing.JTextField();
        precioVuelo = new javax.swing.JTextField();
        avionVuelo = new javax.swing.JTextField();
        capacidadVuelo = new javax.swing.JTextField();
        pasajerosVuelo = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        agendarVuelo = new javax.swing.JButton();
        eliminarVuelo = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaVuelos = new javax.swing.JTable();
        btnActualizar1 = new javax.swing.JButton();
        btnVolver = new javax.swing.JButton();
        btnHistorial = new javax.swing.JButton();
        btnVolver1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("JetBrains Mono", 0, 24)); // NOI18N
        jLabel1.setText("BIEVENIDO AL SISTEMA QUERIDO ADMINISTRADOR!");

        jLabel2.setFont(new java.awt.Font("JetBrains Mono", 0, 12)); // NOI18N
        jLabel2.setText("OPCIONES DE VUELOS");

        jPanel2.setBackground(new java.awt.Color(204, 204, 255));

        jLabel3.setFont(new java.awt.Font("JetBrains Mono", 0, 12)); // NOI18N
        jLabel3.setText("CODIGO DE VUELO");

        jLabel4.setFont(new java.awt.Font("JetBrains Mono", 0, 12)); // NOI18N
        jLabel4.setText("DESTINO");

        jLabel5.setFont(new java.awt.Font("JetBrains Mono", 0, 12)); // NOI18N
        jLabel5.setText("DURACION ");

        jLabel6.setFont(new java.awt.Font("JetBrains Mono", 0, 12)); // NOI18N
        jLabel6.setText("FECHA / HORA");

        jLabel7.setFont(new java.awt.Font("JetBrains Mono", 0, 12)); // NOI18N
        jLabel7.setText("PRECIO");

        jLabel8.setFont(new java.awt.Font("JetBrains Mono", 0, 12)); // NOI18N
        jLabel8.setText("AVION");

        jLabel9.setFont(new java.awt.Font("JetBrains Mono", 0, 12)); // NOI18N
        jLabel9.setText("ORIGEN");

        jLabel10.setFont(new java.awt.Font("JetBrains Mono", 0, 12)); // NOI18N
        jLabel10.setText("CAPACIDAD");

        fechaVuelo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fechaVueloActionPerformed(evt);
            }
        });

        pasajerosVuelo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pasajerosVueloActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("JetBrains Mono", 0, 12)); // NOI18N
        jLabel11.setText("PASAJERO REGISTRADOS");

        agendarVuelo.setFont(new java.awt.Font("JetBrains Mono", 0, 12)); // NOI18N
        agendarVuelo.setText("AGENDAR");
        agendarVuelo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agendarVueloActionPerformed(evt);
            }
        });

        eliminarVuelo.setFont(new java.awt.Font("JetBrains Mono", 0, 12)); // NOI18N
        eliminarVuelo.setText("ELIMINAR");
        eliminarVuelo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarVueloActionPerformed(evt);
            }
        });

        tablaVuelos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tablaVuelos);

        btnActualizar1.setFont(new java.awt.Font("JetBrains Mono", 0, 12)); // NOI18N
        btnActualizar1.setText("ACTUALIZAR");
        btnActualizar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizar1ActionPerformed(evt);
            }
        });

        btnVolver.setFont(new java.awt.Font("JetBrains Mono", 0, 18)); // NOI18N
        btnVolver.setText("VOLVER");
        btnVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolverActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addComponent(eliminarVuelo)
                        .addGap(65, 65, 65)
                        .addComponent(btnActualizar1))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 666, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 65, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pasajerosVuelo, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(fechaVuelo, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(destinoVuelo, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(codigoVuelo, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel3)
                                .addComponent(avionVuelo, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(1, 1, 1))
                        .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel11))
                .addGap(23, 23, 23)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel10)
                    .addComponent(capacidadVuelo)
                    .addComponent(precioVuelo)
                    .addComponent(jLabel7)
                    .addComponent(duracionVuelo)
                    .addComponent(jLabel5)
                    .addComponent(origenVuelo)
                    .addComponent(jLabel9)
                    .addComponent(agendarVuelo, javax.swing.GroupLayout.DEFAULT_SIZE, 102, Short.MAX_VALUE))
                .addGap(63, 63, 63))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(504, 504, 504)
                    .addComponent(btnVolver)
                    .addContainerGap(505, Short.MAX_VALUE)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel9))
                        .addGap(33, 33, 33)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(codigoVuelo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(origenVuelo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(36, 36, 36)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGap(33, 33, 33)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(destinoVuelo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(duracionVuelo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(33, 33, 33)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7))
                        .addGap(33, 33, 33)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(fechaVuelo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(precioVuelo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(33, 33, 33)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(jLabel10))
                        .addGap(33, 33, 33)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(avionVuelo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(capacidadVuelo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(agendarVuelo, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pasajerosVuelo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(eliminarVuelo)
                    .addComponent(btnActualizar1))
                .addGap(34, 34, 34))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(282, 282, 282)
                    .addComponent(btnVolver)
                    .addContainerGap(282, Short.MAX_VALUE)))
        );

        btnHistorial.setFont(new java.awt.Font("JetBrains Mono", 0, 12)); // NOI18N
        btnHistorial.setText("HISTORIAL RESERVAS");
        btnHistorial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHistorialActionPerformed(evt);
            }
        });

        btnVolver1.setFont(new java.awt.Font("JetBrains Mono", 0, 12)); // NOI18N
        btnVolver1.setText("VOLVER");
        btnVolver1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolver1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnVolver1)
                .addGap(18, 18, 18)
                .addComponent(btnHistorial)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(74, 74, 74)
                .addComponent(jLabel1)
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnHistorial)
                        .addComponent(btnVolver1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnHistorialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHistorialActionPerformed
        // TODO add your handling code here:
        pestañaHistorial acceso = new pestañaHistorial();
        acceso.setVisible(true);
        
        this.dispose(); 
    }//GEN-LAST:event_btnHistorialActionPerformed

    private void fechaVueloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fechaVueloActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fechaVueloActionPerformed

    private void pasajerosVueloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pasajerosVueloActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pasajerosVueloActionPerformed

    private void agendarVueloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agendarVueloActionPerformed
        // TODO add your handling code here:
                // Validar campos obligatorios
        if (codigoVuelo.getText().isEmpty() || origenVuelo.getText().isEmpty() || 
            destinoVuelo.getText().isEmpty() || duracionVuelo.getText().isEmpty() || 
            fechaVuelo.getText().isEmpty() || precioVuelo.getText().isEmpty() || 
            avionVuelo.getText().isEmpty() || capacidadVuelo.getText().isEmpty()) {
            
            JOptionPane.showMessageDialog(this, "Todos los campos son obligatorios excepto pasajeros registrados", 
                "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try {
            // Obtener valores de los campos
            String codigo = codigoVuelo.getText();
            String origen = origenVuelo.getText();
            String destino = destinoVuelo.getText();
            String duracion = duracionVuelo.getText();
            String fechaHora = fechaVuelo.getText();
            SimpleDateFormat inputFormat = new SimpleDateFormat("dd/MM/yyyy HH:mm");
            SimpleDateFormat mysqlFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
            
            Date fecha = inputFormat.parse(fechaHora);
            String fechaMySQL = mysqlFormat.format(fecha);
            
            
            double precio = Double.parseDouble(precioVuelo.getText());
            String avion = avionVuelo.getText();
            int capacidad = Integer.parseInt(capacidadVuelo.getText());
            int pasajeros = pasajerosVuelo.getText().isEmpty() ? 0 : Integer.parseInt(pasajerosVuelo.getText());

            // Insertar en la base de datos
            try (Connection conn = dbConect.getConnection();
                 PreparedStatement pst = conn.prepareStatement(
                     "INSERT INTO vuelos (codigo, origen, destino, duracion, fecha_hora, " +
                     "precio, avion, capacidad, pasajeros_registrados) " +
                     "VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)")) {
                
                pst.setString(1, codigo);
                pst.setString(2, origen);
                pst.setString(3, destino);
                pst.setString(4, duracion);
                pst.setString(5, fechaMySQL);
                pst.setDouble(6, precio);
                pst.setString(7, avion);
                pst.setInt(8, capacidad);
                pst.setInt(9, pasajeros);
                
                int resultado = pst.executeUpdate();
                
                if (resultado > 0) {
                    JOptionPane.showMessageDialog(this, "Vuelo agregado correctamente", 
                        "Éxito", JOptionPane.INFORMATION_MESSAGE);
                    limpiarCampos();
                    cargarDatos();
                } else {
                    JOptionPane.showMessageDialog(this, "No se pudo agregar el vuelo", 
                        "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Formato incorrecto en precio, capacidad o pasajeros", 
                "Error de formato", JOptionPane.ERROR_MESSAGE);
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error al agregar vuelo: " + e.getMessage(), 
                "Error de base de datos", JOptionPane.ERROR_MESSAGE);
        } catch (ParseException e) {
            JOptionPane.showMessageDialog(this, "Formato de fecha incorrecto. Use DD/MM/AAAA HH:MM", 
            "Error de formato", JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_agendarVueloActionPerformed

    private void eliminarVueloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarVueloActionPerformed
        // TODO add your handling code here:
        
                // Método para eliminar vuelo
        int filaSeleccionada = tablaVuelos.getSelectedRow();
        
        if (filaSeleccionada == -1) {
            JOptionPane.showMessageDialog(this, "Seleccione un vuelo para eliminar", 
                "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        String codigo = (String) tablaVuelos.getValueAt(filaSeleccionada, 0);
        int confirmacion = JOptionPane.showConfirmDialog(this, 
            "¿Está seguro de eliminar el vuelo " + codigo + "?", 
            "Confirmar eliminación", JOptionPane.YES_NO_OPTION);
        
        if (confirmacion == JOptionPane.YES_OPTION) {
            try (Connection conn = dbConect.getConnection();
                 PreparedStatement pst = conn.prepareStatement(
                     "DELETE FROM vuelos WHERE codigo = ?")) {
                
                pst.setString(1, codigo);
                int resultado = pst.executeUpdate();
                
                if (resultado > 0) {
                    JOptionPane.showMessageDialog(this, "Vuelo eliminado correctamente", 
                        "Éxito", JOptionPane.INFORMATION_MESSAGE);
                    cargarDatos();
                } else {
                    JOptionPane.showMessageDialog(this, "No se pudo eliminar el vuelo", 
                        "Error", JOptionPane.ERROR_MESSAGE);
                }
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(this, "Error al eliminar vuelo: " + e.getMessage(), 
                    "Error de base de datos", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_eliminarVueloActionPerformed

    private void btnActualizar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizar1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnActualizar1ActionPerformed

    private void btnVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolverActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btnVolverActionPerformed

    private void btnVolver1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolver1ActionPerformed
        // TODO add your handling code here:
        pestañaLogin accesso = new pestañaLogin();
        accesso.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnVolver1ActionPerformed

    
    private void limpiarCampos() {
        codigoVuelo.setText("");
        origenVuelo.setText("");
        destinoVuelo.setText("");
        duracionVuelo.setText("");
        fechaVuelo.setText("");
        precioVuelo.setText("");
        avionVuelo.setText("");
        capacidadVuelo.setText("");
        pasajerosVuelo.setText("");
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(pestañaAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(pestañaAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(pestañaAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(pestañaAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new pestañaAdmin().setVisible(true);
            }
        });
    }
    
private void cargarDatos() {
        SwingUtilities.invokeLater(() -> {
            DefaultTableModel model = (DefaultTableModel) tablaVuelos.getModel();
            model.setRowCount(0); // Limpiar tabla
            
            try (Connection conn = dbConect.getConnection();
                 PreparedStatement pst = conn.prepareStatement(
                     "SELECT codigo, origen, destino, duracion, fecha_hora, " +
                     "precio, avion, capacidad, pasajeros_registrados " +
                     "FROM vuelos ORDER BY fecha_hora");
                 ResultSet rs = pst.executeQuery()) {
                
                while (rs.next()) {
                    String codigo = rs.getString("codigo");
                    String origen = rs.getString("origen");
                    String destino = rs.getString("destino");
                    String duracion = rs.getString("duracion");
                    String fechaHora = new SimpleDateFormat("yyyy-MM-dd HH:mm").format(rs.getTimestamp("fecha_hora"));
                    double precio = rs.getDouble("precio");
                    String avion = rs.getString("avion");
                    int capacidad = rs.getInt("capacidad");
                    int pasajeros = rs.getInt("pasajeros_registrados");
                    
                    String disponibilidad = pasajeros + "/" + capacidad;
                    double porcentaje = (double) pasajeros / capacidad * 100;
                    String estado = (porcentaje >= 90) ? "LLENO" : "DISPONIBLE";
                    
                    model.addRow(new Object[]{
                        codigo, origen, destino, duracion,
                        fechaHora, String.format("$%,.2f", precio),
                        avion, disponibilidad, estado
                    });
                }
                
                tablaVuelos.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
                
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(this,
                    "Error al cargar datos:\n" + e.getMessage(),
                    "Error de base de datos",
                    JOptionPane.ERROR_MESSAGE);
            } finally {
                tablaVuelos.revalidate();
                tablaVuelos.repaint();
            }
        });
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton agendarVuelo;
    private javax.swing.JTextField avionVuelo;
    private javax.swing.JButton btnActualizar1;
    private javax.swing.JButton btnHistorial;
    private javax.swing.JButton btnVolver;
    private javax.swing.JButton btnVolver1;
    private javax.swing.JTextField capacidadVuelo;
    private javax.swing.JTextField codigoVuelo;
    private javax.swing.JTextField destinoVuelo;
    private javax.swing.JTextField duracionVuelo;
    private javax.swing.JButton eliminarVuelo;
    private javax.swing.JTextField fechaVuelo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField origenVuelo;
    private javax.swing.JTextField pasajerosVuelo;
    private javax.swing.JTextField precioVuelo;
    private javax.swing.JTable tablaVuelos;
    // End of variables declaration//GEN-END:variables
}
